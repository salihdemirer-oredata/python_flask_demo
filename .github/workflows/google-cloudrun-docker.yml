name: Push to Artifact Registry

on:
  push:
    branches: [ "main" ]

#env:
#  PROJECT_ID: '${{ secrets.GCP_PROJ_ID }}' # TODO: update Google Cloud project id
 # GAR_LOCATION: '${{ vars.LOCATION }}' # TODO: update Artifact Registry location

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_ID }}' 
          service_account: '${{ secrets.AR_SA }}' 

      # NOTE: Alternative option - authentication via credentials json
      # - name: Google Auth
      #   id: auth
      #   uses: 'google-github-actions/auth@v0'
      #   with:
      #     credentials_json: '${{ secrets.GCP_CREDENTIALS }}''

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ vars.LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          docker build -t "${{ vars.LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJ_ID }}/github-actions-test/python-flask:${{ github.sha }}" /
          docker push "${{ vars.LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJ_ID }}/github-actions-test/python-flask:${{ github.sha }}"
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
